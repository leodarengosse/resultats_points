function [PosSat, Dobs, ElevSat, sat_index]=interf_calc_preprocessing_spp(RNX_header,RNX_data,NAV_header,NAV_data,epoch, options)
%% function [PosSat, Dobs, ElevSat, sat_index]=interf_calc_preprocessing_spp(RNX_header,RNX_data,NAV_header,NAV_data,epoch, options)
%% Data organization and preparation before spp processing - interface function
%%
%% Clement Fontaine - 2013-12-11
%%
%% Input : 
%% - RNX_header, RNX_data : obs rinex data generated by function load_rinex_o
%% - NAV_header,NAV_data : nav data (rinex_n or sp3) generated by load_rinex_n (for broadcasted ephemeris) or load_sp3 (for precise orbits)
%%  	- broadcasted ephemeris : NAV_header,NAV_data generated from broadcasted ephemeris .n or .p
%% 		- precise orbits : replace NAV_header,NAV_data by sp3_header,sp3_data, and set options.nav to 'sp3'
%% - epoch : computation epoch
%% - options : structure containing processing options
%% {
%%   X0 : approximated coordinates (column vector of 6 elements [X;Y;Y;cdtr;cGGTO;cGLO2GPST]) 
%%        default : X0 = [0 ;0; 0; 0; 0];
%%   const : constellations used ('G' = GPS, 'R' = Glonass, 'E' = Galileo, for multi-constellation concatenate chars)
%%        default : 'G'
%%   freq : type of used data [C1,P2,iono_free] 
%%        default : iono_free
%%         - 'F1' : use F1 frequency obs
%%         - 'F2' : use F2 frequency obs (or F5 for Galileo)
%%         - 'iono_free' : ionosphere-free combination
%%		   default : 'iono_free'
%%   iono : type of correction :
%%		   - 'klobuchar' : klobuchar modelization -> if  nav = 'brdc'
%%		   - 'none' : no correction (if freq = 'iono_free', iono set to 'none')
%%         default : 'none' 
%%   nav : type of orbits
%%		   - 'brdc' : broadcasted ephemeris
%%         - 'sp3' : precise orbits
%%         default : 'brdc'    
%%   cut_off : elevation cut off in degree
%%         default : 3 degrees
%% }
%%
%% Output : 
%% - PosSat : matrix containing satellite position [X,Y,Z] (m)
%% - Dobs : vector containing observations (m)
%% - ElevSat : vector of satellite elevation (rad)
%% - sat_index : vector containing constellation type (1 = GPS, 2 = Galileo, 3 = Glonass)
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

X0 = options.X0;
if length(X0)<6
	X0 = [X0(:);zeros(6-length(X0),1)];
end
options.X0 = X0;

[G,result]=calc_preprocessing_spp(RNX_header,RNX_data,NAV_header,NAV_data,epoch,options);

% output
PosSat = result.PosSat;
Dobs = result.Dobs;
ElevSat = result.ElevSat;

sat_index_temp = zeros(size(Dobs));
for i = 1:size(result.sat_index,1)
	id = result.sat_index{i,1};
	if (id(1) == 'G')
		sat_index_temp(i) = 1;
	elseif (id(1) == 'E')
		sat_index_temp(i) = 2;
	elseif (id(1) == 'R')
		sat_index_temp(i) = 3;
	end
end

sat_index = sat_index_temp;

end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

